name: Testy i Wdro≈ºenie

on:
  push:
    branches:
      - main
      - test1
  pull_request:
    branches:
      - main

jobs:
  install-poetry:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$HOME/.local/bin:$PATH

    - name: Cache Poetry dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: /home/runner/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/*.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install

  static-code-analysis:
    runs-on: ubuntu-latest
    needs: install-poetry

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache linter, formatter, and security checks
      id: cached-static-code-analysis
      uses: actions/cache@v2
      with:
        path: /home/runner/.cache/static-code-analysis
        key: ${{ runner.os }}-static-code-analysis
        restore-keys: |
          ${{ runner.os }}-static-code-analysis

    - name: Run linter, formatter, and security checks
      if: steps.cached-static-code-analysis.outputs.cache-hit != 'true'
      run: |
        # Your static code analysis commands go here

  unit-tests:
    runs-on: ubuntu-latest
    needs: install-poetry

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache unit tests
      id: cached-unit-tests
      uses: actions/cache@v2
      with:
        path: /home/runner/.cache/unit-tests
        key: ${{ runner.os }}-unit-tests
        restore-keys: |
          ${{ runner.os }}-unit-tests

    - name: Run unit tests
      if: steps.cached-unit-tests.outputs.cache-hit != 'true'
      run: |
        poetry run pytest
